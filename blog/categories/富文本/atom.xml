<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 富文本 | Teddywu]]></title>
  <link href="http://teddywuinfo.github.com/blog/categories/富文本/atom.xml" rel="self"/>
  <link href="http://teddywuinfo.github.com/"/>
  <updated>2013-08-24T15:54:03+08:00</updated>
  <id>http://teddywuinfo.github.com/</id>
  <author>
    <name><![CDATA[Teddywu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[WP8开发] 在wp8中如何实现富文本显示（图文混排）？]]></title>
    <link href="http://teddywuinfo.github.com/blog/2013/03/21/how-to-display-rick-textblock-in-wp8/"/>
    <updated>2013-03-21T15:12:00+08:00</updated>
    <id>http://teddywuinfo.github.com/blog/2013/03/21/how-to-display-rick-textblock-in-wp8</id>
    <content type="html"><![CDATA[<p>一个简单的场景：一条feeds里面包含了文本，QQ表情，还有超链接，和图片。如何展示。</p>

<p>这里需要用到一个控件叫做<a href="http://msdn.microsoft.com/zh-cn/library/system.windows.controls.richtextblock%28v=vs.95%29.aspx">RickTextBlock(System.Windows.Controls.RickTextBlock)</a>。这个控件在工具箱里面找不到，但是可以XAML里面直接手写输入得到。用法比较简单，我直接上代码了。我这里把文本、图片和链接封装了一下，方便调用。代码如下：</p>

<!--more -->


<p>XAML:</p>

<pre><code>&lt;Grid x:Name="ContentPanel" Grid.Row="1" Margin="12,0,12,0"&gt;
    &lt;RichTextBox x:Name="RickTextBox"&gt;

    &lt;/RichTextBox&gt;
&lt;/Grid&gt;
</code></pre>

<p>C#:</p>

<pre><code>public partial class MainPage : PhoneApplicationPage {
    // 构造函数
    public MainPage() {
        InitializeComponent();
        Paragraph p = new Paragraph();
        List&lt;MyBlock &gt; BlockList = new List&lt; MyBlock&gt;();
        BlockList.Add( new MyTextBlock ("今天天气不错!！今天天气不错!！今天天气不错!！今天天气不错!！" , Colors.LightGray));
        BlockList.Add( new ImageBlock("http://ctc.qzs.qq.com/qzone/em/e113.png" ));
        BlockList.Add( new UrlBlock("http://user.qzone.qq.com/312315220" , "点击进入我的空间"));
        foreach (MyBlock block in BlockList) {
            p.Inlines.Add(block.getInline());
        }
        RickTextBox.Blocks.Add(p);
    }
}

public class MyBlock {
    public virtual Inline getInline() {
        return null ;
    }
}

/// &lt;summary&gt;
/// 超链接
/// &lt;/summary&gt;
public class UrlBlock : MyBlock {
    private string _url;
    private string _text;
    public UrlBlock(string url, string text) {
        _url = url;
        _text = text;
    }
    public override Inline getInline() {
        Hyperlink hl = new Hyperlink();
        hl.Foreground = new SolidColorBrush (Colors.Blue);
        hl.TargetName = "ExternalWebTask" + DateTime.Now.Millisecond;
        hl.Click += HyperlinkButton_Click;
        hl.Inlines.Add(System.Net. HttpUtility.UrlDecode(_text));
        hl.NavigateUri = new Uri(System.Net.HttpUtility .UrlDecode(_url), UriKind.Absolute);
        return hl;
    }


    private void HyperlinkButton_Click(object sender, RoutedEventArgs e) {
        if (e == null &amp;&amp; e.OriginalSource as Hyperlink == null) {
            return;
        }
        if ((e.OriginalSource as Hyperlink).NavigateUri == null) {
            return;
        }
        WebBrowserTask task = new WebBrowserTask();
        task.Uri = (e.OriginalSource as Hyperlink ).NavigateUri;
        try {
            task.Show();
        } catch (Exception ex) {
            System.Diagnostics. Debug.WriteLine(ex.ToString());
        }
    }
}


/// &lt;summary&gt;
/// 图片
/// &lt;/summary&gt;
public class ImageBlock : MyBlock {
    private string _emoUrl;
    public ImageBlock(string url) {
        _emoUrl = url;
    }


    public override Inline getInline() {
        Image image = new Image();
        BitmapImage bm = new BitmapImage();
        Uri emoUri = new Uri(_emoUrl, UriKind.Absolute);
        image.Source = new BitmapImage (emoUri);
        image.Width = 24;
        image.Height = 24;
        InlineUIContainer iuc = new InlineUIContainer();
        iuc.Child = image;
        return iuc;
    }
}

/// &lt;summary&gt;
/// 纯文字
/// &lt;/summary&gt;
public class MyTextBlock : MyBlock {
    private string _text;
    private Color _color;
    public MyTextBlock(string text) {
        _text = text;
    }
    public MyTextBlock(string text, Color color) {
        _text = text;
        _color = color;
    }
    public override Inline getInline() {
        Run r = new Run();
        if (_color.ToString() != "#00000000" ) {
            r.Foreground = new SolidColorBrush (_color);
        }
        r.Text = _text;
        r.FontSize = 20;
        return r;
    }
}
</code></pre>

<p>富文本展示demo:<a href="/plugin/rich-textblock-demo.rar">点击下载附件</a></p>
]]></content>
  </entry>
  
</feed>
